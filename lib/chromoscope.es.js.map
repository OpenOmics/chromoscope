{"version":3,"file":"chromoscope.es.js","sources":["../src/track/driver.ts","../src/track/cnv.ts","../src/track/coverage.ts","../src/track/gain.ts","../src/track/loh.ts","../src/constants.ts","../src/default-encoding.ts","../src/track/sv.ts","../src/track/mutation.ts","../src/track/indel.ts","../src/track/boundary.ts","../src/track/index.ts","../src/utils.ts","../src/mid-spec.ts","../src/alignment.ts","../src/vertical-guide.ts","../src/main-spec.ts"],"sourcesContent":["import { SingleTrack } from 'gosling.js/dist/src/core/gosling.schema';\nimport { TrackMode } from './index';\n\nexport default function driver(\n    sampleId: string,\n    url: string,\n    width: number,\n    height: number,\n    mode: TrackMode\n): SingleTrack {\n    return {\n        id: `${sampleId}-${mode}-driver`,\n        title: 'Putative Driver',\n        // TODO: click events are not supported for layered tracks\n        // experimental: {\n        //     mouseEvents: {\n        //         click: true,\n        //         mouseOver: true\n        //     }\n        // },\n        data: {\n            url,\n            type: 'csv',\n            separator: '\\t',\n            chromosomeField: 'chr',\n            genomicFields: ['pos']\n        },\n        dataTransform: [\n            {\n                type: 'replace',\n                field: 'biallelic',\n                replace: [\n                    { from: 'yes', to: '⊙ ' },\n                    { from: 'no', to: '· ' },\n                    { from: 'Yes', to: '⊙ ' },\n                    { from: 'No', to: '· ' },\n                    { from: undefined, to: '' }\n                ],\n                newField: 'prefix'\n            },\n            { type: 'concat', fields: ['prefix', 'gene'], newField: 'geneWithPrefix', separator: '' }\n            // { type: 'displace', method: 'pile', boundingBox: { startField: 'pos', endField: 'pos', padding: 100, isPaddingBP: false }, newField: 'row', maxRows: 2 }\n        ],\n        mark: 'text',\n        x: { field: 'pos', type: 'genomic' },\n        text: { field: 'geneWithPrefix', type: 'nominal' },\n        color: { value: 'black' },\n        row: { field: 'row', type: 'nominal' },\n        style: { textFontWeight: 'normal' },\n        size: { value: mode === 'top' ? 10 : 14 },\n        tooltip: [\n            { field: 'pos', alt: 'Position', type: 'genomic' },\n            { field: 'ref', alt: 'REF', type: 'nominal' },\n            { field: 'alt', alt: 'ALT', type: 'nominal' },\n            { field: 'category', alt: 'Category', type: 'nominal' },\n            { field: 'top_category', alt: 'Top Category', type: 'nominal' },\n            { field: 'biallelic', alt: 'Biallelic', type: 'nominal' },\n            { field: 'transcript_consequence', alt: 'Transcript Consequence', type: 'nominal' },\n            { field: 'protein_mutation', alt: 'Protein Mutation', type: 'nominal' },\n            { field: 'allele_fraction', alt: 'Allele Fraction', type: 'nominal' },\n            { field: 'mutation_type', alt: 'Mutation Type', type: 'nominal' }\n        ],\n        width,\n        height: height\n    };\n}\n","import { SingleTrack, OverlaidTracks } from 'gosling.js/dist/src/core/gosling.schema';\nimport { TrackMode } from './index';\n\nexport default function cnv(\n    sampleId: string,\n    cnvUrl: string,\n    width: number,\n    height: number,\n    mode: TrackMode,\n    cnFields: [string, string, string] = ['total_cn', 'major_cn', 'minor_cn']\n): OverlaidTracks {\n    const [total_cn, major_cn, minor_cn] = cnFields;\n    return {\n        id: `${sampleId}-${mode}-cnv`,\n        title: mode === 'small' ? '' : 'Copy Number Variants',\n        style: { background: '#FFFFFF' },\n        data: {\n            separator: '\\t',\n            url: cnvUrl,\n            type: 'csv',\n            chromosomeField: 'chromosome',\n            genomicFields: ['start', 'end']\n        },\n        mark: 'rect',\n        x: { field: 'start', type: 'genomic' },\n        xe: { field: 'end', type: 'genomic' },\n        alignment: 'overlay',\n        tracks: [\n            {\n                y: { field: total_cn, type: 'quantitative', axis: 'right', grid: true, range: [0 + 10, height - 10] },\n                color: { value: '#808080' }\n            }\n            // {\n            //     y: { field: 'minor_cn', type: 'quantitative', axis: 'right', grid: true },\n            //     color: { value: 'red' },\n            // }\n        ],\n        tooltip: [\n            { field: total_cn, type: 'quantitative' },\n            { field: major_cn, type: 'quantitative' },\n            { field: minor_cn, type: 'quantitative' }\n        ],\n        size: { value: 5 },\n        stroke: { value: '#808080' },\n        strokeWidth: { value: 1 },\n        opacity: { value: 0.7 },\n        width,\n        height\n    };\n}\n","import { SingleTrack } from 'gosling.js/dist/src/core/gosling.schema';\nimport { SpecOption } from '../main-spec';\n\nexport default function coverage(option: SpecOption, isLeft: boolean): Partial<SingleTrack> {\n    const { id, bam, bai, width, svReads, crossChr, bpIntervals } = option;\n    return {\n        id: `${id}-bottom-${isLeft ? 'left' : 'right'}-coverage`,\n        title: 'Coverage',\n        data: {\n            type: 'bam',\n            url: bam,\n            indexUrl: bai\n        },\n        dataTransform: [\n            {\n                type: 'coverage',\n                startField: 'start',\n                endField: 'end'\n            }\n        ],\n        mark: 'bar',\n        x: { field: 'start', type: 'genomic' },\n        xe: { field: 'end', type: 'genomic' },\n        y: {\n            field: 'coverage',\n            type: 'quantitative',\n            axis: 'right',\n            grid: true\n        },\n        color: { value: 'lightgray' },\n        stroke: { value: 'gray' },\n        width,\n        height: 80\n    };\n}\n","import { SingleTrack } from 'gosling.js/dist/src/core/gosling.schema';\nimport { TrackMode } from './index';\n\nexport default function gain(\n    sampleId: string,\n    cnvUrl: string,\n    width: number,\n    height: number,\n    mode: TrackMode,\n    cnFields: [string, string, string] = ['total_cn', 'major_cn', 'minor_cn']\n): SingleTrack {\n    const [total_cn, major_cn, minor_cn] = cnFields;\n    return {\n        id: `${sampleId}-${mode}-gain`,\n        title: mode === 'small' ? '' : 'Gain',\n        style: { background: '#F6F6F6' },\n        data: {\n            separator: '\\t',\n            url: cnvUrl,\n            type: 'csv',\n            chromosomeField: 'chromosome',\n            genomicFields: ['start', 'end']\n        },\n        dataTransform: [\n            // https://cancer.sanger.ac.uk/cosmic/help/cnv/overview\n            {\n                type: 'filter',\n                field: total_cn,\n                inRange: [5, 999]\n            }\n        ],\n        mark: 'rect',\n        x: { field: 'start', type: 'genomic' },\n        xe: { field: 'end', type: 'genomic' },\n        color: { value: '#5CB6EA' },\n        width,\n        height\n    };\n}\n","import { SingleTrack } from 'gosling.js/dist/src/core/gosling.schema';\nimport { TrackMode } from './index';\n\nexport default function loh(\n    sampleId: string,\n    cnvUrl: string,\n    width: number,\n    height: number,\n    mode: TrackMode,\n    cnFields: [string, string, string] = ['total_cn', 'major_cn', 'minor_cn']\n): SingleTrack {\n    const [total_cn, major_cn, minor_cn] = cnFields;\n    return {\n        id: `${sampleId}-${mode}-loh`,\n        title: mode !== 'small' ? 'Loss of Heterozygosity (LOH)' : '',\n        style: { background: '#F6F6F6' },\n        data: {\n            separator: '\\t',\n            url: cnvUrl,\n            type: 'csv',\n            chromosomeField: 'chromosome',\n            genomicFields: ['start', 'end']\n        },\n        dataTransform: [\n            { type: 'filter', field: minor_cn, inRange: [0, 0.01] },\n            { type: 'filter', field: total_cn, oneOf: ['0'], not: true }\n        ],\n        mark: 'rect',\n        x: { field: 'start', type: 'genomic' },\n        xe: { field: 'end', type: 'genomic' },\n        color: { value: '#D6641E' },\n        width,\n        height\n    };\n}\n","import { ThemeDeep } from 'gosling.js/dist/src/core/utils/theme';\n\nexport const consistentSv = {\n    DUP: 'Duplication',\n    TRA: 'Translocation',\n    DEL: 'Deletion',\n    t2tINV: 'Inversion (TtT)',\n    h2hINV: 'Inversion (HtH)'\n};\n\nexport const WHOLE_CHROMOSOME_STR = 'Whole Genome';\n\nexport const CHROMOSOMES = [\n    'chr1',\n    'chr2',\n    'chr3',\n    'chr4',\n    'chr5',\n    'chr6',\n    'chr7',\n    'chr8',\n    'chr9',\n    'chr10',\n    'chr11',\n    'chr12',\n    'chr13',\n    'chr14',\n    'chr15',\n    'chr16',\n    'chr17',\n    'chr18',\n    'chr19',\n    'chr20',\n    'chr21',\n    'chr22',\n    'chrX',\n    'chrY'\n];\n\nexport const THEME: ThemeDeep = {\n    base: 'light',\n    root: {\n        background: 'white',\n        titleAlign: 'middle',\n        titleColor: 'black',\n        titleFontSize: 18,\n        titleFontFamily: 'Arial',\n        titleFontWeight: 'normal',\n        subtitleAlign: 'middle',\n        subtitleColor: 'gray',\n        subtitleFontSize: 14,\n        subtitleFontWeight: 'normal',\n        subtitleFontFamily: 'Arial'\n    },\n    legend: {\n        labelFontFamily: 'Arial'\n    },\n    axis: {\n        labelFontFamily: 'Arial',\n        labelFontSize: 14\n    }\n} as const;\n","export default {\n    color: {\n        svclass: {\n            // definitions about head-to-head and tail-to-tail inversion,\n            // see https://genomebiology.biomedcentral.com/articles/10.1186/s13059-018-1421-5/figures/7\n            domain: ['Translocation', 'Duplication', 'Deletion', 'Inversion (TtT)', 'Inversion (HtH)'],\n            range: ['lightgrey', '#409F7A', '#3275B4', '#CC7DAA', '#E6A01B'],\n            Translocation: 'lightgrey',\n            Duplication: '#409F7A',\n            Deletion: '#3275B4',\n            'Inversion (TtT)': '#CC7DAA',\n            'Inversion (HtH)': '#E6A01B'\n        }\n    }\n};\n","import {\n    FilterTransform,\n    OverlaidTracks,\n    SingleTrack,\n    StrReplaceTransform,\n    SvTypeTransform\n} from 'gosling.js/dist/src/core/gosling.schema';\nimport { consistentSv } from '../constants';\nimport defaults from '../default-encoding';\nimport { TrackMode } from '.';\n\nconst TRI_SIZE = 5;\n\nconst svInfer: [SvTypeTransform, StrReplaceTransform] = [\n    {\n        type: 'svType',\n        firstBp: {\n            chrField: 'chrom1',\n            posField: 'start1',\n            strandField: 'strand1'\n        },\n        secondBp: {\n            chrField: 'chrom2',\n            posField: 'start2',\n            strandField: 'strand2'\n        },\n        newField: 'svclass'\n    },\n    {\n        type: 'replace',\n        field: 'svclass',\n        replace: [\n            ...Object.entries(consistentSv).map(([from, to]) => {\n                return { from, to };\n            })\n        ],\n        newField: 'svclass'\n    }\n];\n\ntype SvType = 'Translocation' | 'Duplication' | 'Deletion' | 'Inversion (TtT)' | 'Inversion (HtH)';\nfunction filterSv(oneOf: SvType[], not: boolean): FilterTransform {\n    return {\n        type: 'filter',\n        field: 'svclass',\n        oneOf,\n        not\n    };\n}\n\nexport default function sv(\n    sampleId: string,\n    url: string,\n    width: number,\n    height: number,\n    mode: TrackMode,\n    selectedSvId: string\n): OverlaidTracks {\n    const _baselineYMap: { [k in SvType]: { y: number; ye: number } } = {\n        Translocation: { y: (height / 5) * 4, ye: height },\n        Deletion: { y: height / 5, ye: 1 },\n        Duplication: { y: height / 5, ye: (height / 5) * 2 },\n        'Inversion (TtT)': { y: (height / 5) * 3, ye: (height / 5) * 2 },\n        'Inversion (HtH)': { y: (height / 5) * 3, ye: (height / 5) * 4 }\n    };\n    const arcs = (sv: SvType, selected: boolean): Partial<SingleTrack> => {\n        const { y, ye } = _baselineYMap[sv];\n        return {\n            // TODO: the right end does not sometimes show the arc.\n            dataTransform: [\n                ...svInfer,\n                {\n                    type: 'filter',\n                    field: 'sv_id',\n                    oneOf: [selectedSvId],\n                    not: !selected\n                },\n                filterSv([sv], false)\n            ],\n            x: { field: 'start1', type: 'genomic' },\n            xe: { field: 'end2', type: 'genomic' },\n            y: { value: y },\n            ye: { value: ye },\n            flipY: true,\n            ...(selected ? { opacity: { value: 1 }, strokeWidth: { value: 2 } } : {}),\n            ...(selected && sv === 'Translocation' ? { stroke: { value: 'grey' } } : {})\n        };\n    };\n    const svs = [...defaults.color.svclass.domain];\n    return {\n        id: `${sampleId}-${mode}-sv`,\n        alignment: 'overlay',\n        experimental: {\n            mouseEvents: {\n                click: true,\n                mouseOver: true,\n                groupMarksByField: 'sv_id'\n            },\n            performanceMode: true\n        },\n        data: {\n            url,\n            type: 'csv',\n            separator: '\\t',\n            headerNames: [\n                'chrom1',\n                'start1',\n                'end1',\n                'chrom2',\n                'start2',\n                'end2',\n                'sv_id',\n                'pe_support',\n                'strand1',\n                'strand2'\n            ],\n            genomicFieldsToConvert: [\n                {\n                    chromosomeField: 'chrom1',\n                    genomicFields: ['start1', 'end1']\n                },\n                {\n                    chromosomeField: 'chrom2',\n                    genomicFields: ['start2', 'end2']\n                }\n            ]\n        },\n        mark: 'withinLink',\n        tracks: [\n            ...svs.map(d => arcs(d as any, false)),\n            ...svs.map(d => arcs(d as any, true)),\n            ...((mode !== 'mid'\n                ? []\n                : [\n                      {\n                          dataTransform: [{ type: 'filter', field: 'strand1', oneOf: ['+'] }],\n                          mark: 'triangleLeft',\n                          x: { field: 'start1', type: 'genomic' },\n                          size: { value: TRI_SIZE },\n                          y: { value: height },\n                          stroke: { value: 0 },\n                          style: { align: 'right' }\n                      },\n                      {\n                          dataTransform: [{ type: 'filter', field: 'strand1', oneOf: ['-'] }],\n                          mark: 'triangleRight',\n                          x: { field: 'start1', type: 'genomic' },\n                          size: { value: TRI_SIZE },\n                          y: { value: height },\n                          stroke: { value: 0 },\n                          style: { align: 'left' }\n                      },\n                      {\n                          dataTransform: [{ type: 'filter', field: 'strand2', oneOf: ['+'] }],\n                          mark: 'triangleLeft',\n                          x: { field: 'end2', type: 'genomic' },\n                          size: { value: TRI_SIZE },\n                          y: { value: height },\n                          stroke: { value: 0 },\n                          style: { align: 'right' }\n                      },\n                      {\n                          dataTransform: [{ type: 'filter', field: 'strand2', oneOf: ['-'] }],\n                          mark: 'triangleRight',\n                          x: { field: 'end2', type: 'genomic' },\n                          size: { value: TRI_SIZE },\n                          y: { value: height },\n                          stroke: { value: 0 },\n                          style: { align: 'left' }\n                      }\n                  ]) as OverlaidTracks[]),\n            ...((mode !== 'mid'\n                ? []\n                : [\n                      {\n                          dataTransform: [...svInfer, { type: 'filter', field: 'sv_id', oneOf: [selectedSvId] }],\n                          mark: 'rule',\n                          x: { field: 'start1', type: 'genomic' },\n                          color: { value: 'black' },\n                          strokeWidth: { value: 1 },\n                          opacity: { value: 1 },\n                          style: { dashed: [3, 3] }\n                      },\n                      {\n                          dataTransform: [...svInfer, { type: 'filter', field: 'sv_id', oneOf: [selectedSvId] }],\n                          mark: 'rule',\n                          x: { field: 'end2', type: 'genomic' },\n                          color: { value: 'black' },\n                          strokeWidth: { value: 1 },\n                          opacity: { value: 1 },\n                          style: { dashed: [3, 3] }\n                      }\n                  ]) as OverlaidTracks[])\n        ],\n        y: { value: height / 5 },\n        color: {\n            field: 'svclass',\n            type: 'nominal',\n            legend: mode !== 'small',\n            domain: ['Gain', 'LOH', ...defaults.color.svclass.domain],\n            range: ['#5CB6EA', '#D6641E', ...defaults.color.svclass.range]\n        },\n        stroke: {\n            field: 'svclass',\n            type: 'nominal',\n            domain: defaults.color.svclass.domain,\n            range: defaults.color.svclass.range\n        },\n        strokeWidth: { value: 1 },\n        opacity: { value: 0.7 },\n        tooltip: [\n            { field: 'start1', type: 'genomic' },\n            { field: 'end2', type: 'genomic' },\n            { field: 'strand1', type: 'nominal' },\n            { field: 'strand2', type: 'nominal' },\n            { field: 'svclass', type: 'nominal' },\n            { field: 'sv_id', type: 'nominal' },\n            { field: 'pe_support', type: 'nominal' }\n        ],\n        style: {\n            linkStyle: 'elliptical',\n            linkMinHeight: 0.7,\n            mouseOver: { stroke: '#242424', strokeWidth: 1 },\n            withinLinkVerticalLines: true\n        },\n        width,\n        height\n    };\n}\n","import { SingleTrack } from 'gosling.js/dist/src/core/gosling.schema';\nimport { TrackMode } from './index';\n\nexport default function mutation(\n    sampleId: string,\n    url: string,\n    indexUrl: string,\n    width: number,\n    height: number,\n    mode: TrackMode\n): SingleTrack {\n    return {\n        id: `${sampleId}-${mode}-mutation`,\n        title: 'Point Mutation',\n        style: { background: '#FFFFFF', inlineLegend: true },\n        data: {\n            type: 'vcf',\n            url,\n            indexUrl,\n            sampleLength: 500\n        },\n        dataTransform: [{ field: 'DISTPREV', type: 'filter', oneOf: [0], not: true }],\n        mark: 'point',\n        x: { field: 'POS', type: 'genomic' },\n        color: { field: 'SUBTYPE', type: 'nominal', legend: true, domain: ['C>A', 'C>G', 'C>T', 'T>A', 'T>C', 'T>G'] },\n        y: { field: 'DISTPREVLOGE', type: 'quantitative', axis: 'left', range: [10, height - 10] },\n        opacity: { value: 0.9 },\n        tooltip: [\n            { field: 'DISTPREV', type: 'nominal', format: 's1', alt: 'Distance To Previous Mutation (BP)' },\n            { field: 'POS', type: 'genomic' },\n            { field: 'SUBTYPE', type: 'nominal' }\n        ],\n        width,\n        height\n    };\n}\n","import { OverlaidTracks } from 'gosling.js/dist/src/core/gosling.schema';\nimport { TrackMode } from './index';\n\nexport default function indel(\n    sampleId: string,\n    url: string,\n    indexUrl: string,\n    width: number,\n    height: number,\n    mode: TrackMode\n): OverlaidTracks {\n    return {\n        id: `${sampleId}-${mode}-indel`,\n        style: { background: '#F6F6F6' },\n        data: {\n            url,\n            indexUrl,\n            type: 'vcf',\n            sampleLength: 500\n        },\n        dataTransform: [\n            {\n                type: 'concat',\n                fields: ['REF', 'ALT'],\n                separator: ' → ',\n                newField: 'LAB'\n            },\n            {\n                type: 'replace',\n                field: 'MUTTYPE',\n                replace: [\n                    { from: 'insertion', to: 'Insertion' },\n                    { from: 'deletion', to: 'Deletion' }\n                ],\n                newField: 'MUTTYPE'\n            }\n        ],\n        alignment: 'overlay',\n        tracks: [\n            {\n                size: { value: height / 2 - 1 },\n                visibility: [\n                    {\n                        target: 'track',\n                        operation: 'GT',\n                        measure: 'zoomLevel',\n                        threshold: 1000\n                    }\n                ]\n            },\n            {\n                xe: { field: 'POSEND', type: 'genomic', axis: 'top' },\n                visibility: [\n                    {\n                        target: 'track',\n                        operation: 'LTET',\n                        measure: 'zoomLevel',\n                        threshold: 1000\n                    }\n                ]\n            }\n            // {\n            //     mark: 'text',\n            //     text: { field: 'LAB', type: 'nominal' },\n            //     xe: { field: 'POSEND', type: 'genomic', axis: 'top' },\n            //     color: { value: 'white' },\n            //     strokeWidth: { value: 0 },\n            //     opacity: { value: 1 },\n            //     visibility: [\n            //         {\n            //             target: 'mark',\n            //             operation: 'LT',\n            //             measure: 'width',\n            //             transitionPadding: 30,\n            //             threshold: '|xe-x|'\n            //         }\n            //     ]\n            // }\n        ],\n        mark: 'rect',\n        x: { field: 'POS', type: 'genomic' },\n        // stroke: {\n        //     field: 'MUTTYPE',\n        //     type: 'nominal',\n        //     legend: false,\n        //     domain: ['Insertion', 'Deletion']\n        // },\n        // strokeWidth: { value: 1 },\n        color: {\n            field: 'MUTTYPE',\n            type: 'nominal',\n            legend: false,\n            domain: ['Insertion', 'Deletion']\n        },\n        row: {\n            field: 'MUTTYPE',\n            type: 'nominal',\n            legend: true,\n            domain: ['Insertion', 'Deletion']\n        },\n        tooltip: [\n            { field: 'POS', type: 'genomic' },\n            { field: 'POSEND', type: 'genomic' },\n            { field: 'MUTTYPE', type: 'nominal' },\n            { field: 'ALT', type: 'nominal' },\n            { field: 'REF', type: 'nominal' },\n            { field: 'QUAL', type: 'quantitative' }\n        ],\n        opacity: { value: 0.9 },\n        width,\n        height\n    };\n}\n","import { SingleTrack } from 'gosling.js/dist/src/core/gosling.schema';\nimport { TrackMode } from '.';\n\nconst hex = 'lightgray';\n\nexport default function boundary(parent: string, mode: TrackMode): Partial<SingleTrack> {\n    return {\n        id: `${parent}-${mode}-boundary`,\n        data: {\n            type: 'json',\n            chromosomeField: 'c',\n            genomicFields: ['p'],\n            values: [\n                { c: 'chr2', p: 0 },\n                { c: 'chr3', p: 0 },\n                { c: 'chr4', p: 0 },\n                { c: 'chr5', p: 0 },\n                { c: 'chr6', p: 0 },\n                { c: 'chr7', p: 0 },\n                { c: 'chr8', p: 0 },\n                { c: 'chr9', p: 0 },\n                { c: 'chr10', p: 0 },\n                { c: 'chr11', p: 0 },\n                { c: 'chr12', p: 0 },\n                { c: 'chr13', p: 0 },\n                { c: 'chr14', p: 0 },\n                { c: 'chr15', p: 0 },\n                { c: 'chr16', p: 0 },\n                { c: 'chr17', p: 0 },\n                { c: 'chr18', p: 0 },\n                { c: 'chr19', p: 0 },\n                { c: 'chr20', p: 0 },\n                { c: 'chr21', p: 0 },\n                { c: 'chrX', p: 0 },\n                { c: 'chrY', p: 0 }\n            ]\n        },\n        mark: mode === 'mid' ? 'rule' : 'rect',\n        x: { field: 'p', type: 'genomic' },\n        color: { value: hex },\n        opacity: { value: 0.5 },\n        overlayOnPreviousTrack: true\n    };\n}\n","import driver from './driver';\nimport cnv from './cnv';\nimport coverage from './coverage';\nimport gain from './gain';\nimport loh from './loh';\nimport sv from './sv';\nimport mutation from './mutation';\nimport indel from './indel';\nimport boundary from './boundary';\n\nexport type TrackMode = 'small' | 'top' | 'mid';\n\nexport default {\n    driver,\n    cnv,\n    coverage,\n    gain,\n    loh,\n    sv,\n    mutation,\n    indel,\n    boundary\n};\n","export const CHROM_SIZE_HG38 = {\n    chr1: 248956422,\n    chr2: 242193529,\n    chr3: 198295559,\n    chr4: 190214555,\n    chr5: 181538259,\n    chr6: 170805979,\n    chr7: 159345973,\n    chr8: 145138636,\n    chr9: 138394717,\n    chr10: 133797422,\n    chr11: 135086622,\n    chr12: 133275309,\n    chr13: 114364328,\n    chr14: 107043718,\n    chr15: 101991189,\n    chr16: 90338345,\n    chr17: 83257441,\n    chr18: 80373285,\n    chr19: 58617616,\n    chr20: 64444167,\n    chr21: 46709983,\n    chr22: 50818468,\n    chrX: 156040895,\n    chrY: 57227415\n};\n\nexport const CHROM_SIZE_HG19 = {\n    chr1: 249250621,\n    chr2: 243199373,\n    chr3: 198022430,\n    chr4: 191154276,\n    chr5: 180915260,\n    chr6: 171115067,\n    chr7: 159138663,\n    chr8: 146364022,\n    chr9: 141213431,\n    chr10: 135534747,\n    chr11: 135006516,\n    chr12: 133851895,\n    chr13: 115169878,\n    chr14: 107349540,\n    chr15: 102531392,\n    chr16: 90354753,\n    chr17: 81195210,\n    chr18: 78077248,\n    chr19: 59128983,\n    chr20: 63025520,\n    chr21: 48129895,\n    chr22: 51304566,\n    chrX: 155270560,\n    chrY: 59373566,\n    chrM: 16571\n};\n\nfunction getChromInterval(chromSize: { [k: string]: number }) {\n    const interval: { [k: string]: [number, number] } = {};\n\n    Object.keys(chromSize).reduce((sum, k) => {\n        interval[k] = [sum, sum + chromSize[k]];\n        return sum + chromSize[k];\n    }, 0);\n\n    return interval;\n}\n\nexport function getRelativeGenomicPosition(absPos: number, assembly: 'hg38' | 'hg19') {\n    const [chromosome, absInterval] = Object.entries(\n        getChromInterval(assembly === 'hg19' ? CHROM_SIZE_HG19 : CHROM_SIZE_HG38)\n    ).find(d => {\n        const [start, end] = d[1];\n        return start <= absPos && absPos < end;\n    }) ?? [null, null];\n\n    if (!chromosome || !absInterval) {\n        // The number is out of range\n        return { chromosome: 'unknown', position: absPos };\n    }\n\n    return { chromosome, position: absPos - absInterval[0] };\n}\n\nexport function isChrome() {\n    return window.navigator.userAgent.toLowerCase().indexOf('chrome') !== -1;\n}\n\nexport function driversToTsvUrl(drivers: string | { [k: string]: string | number }[]) {\n    if (typeof drivers === 'string') return drivers;\n\n    const keys = [];\n    drivers.forEach(d => keys.push(...Object.keys(d)));\n    const uniqueKeys = Array.from(new Set(keys));\n    const text = [uniqueKeys.join('\\t'), ...drivers.map(d => uniqueKeys.map(k => d[k]).join('\\t'))].join('\\n');\n    const tsv = new Blob([text], { type: 'text/tsv' });\n    const url = URL.createObjectURL(tsv);\n    return url;\n}\n","import { SpecOption } from './main-spec';\nimport { SingleTrack, View } from 'gosling.js/dist/src/core/gosling.schema';\nimport tracks from './track';\nimport { driversToTsvUrl } from './utils';\n\nexport default function getMidView(option: SpecOption): View[] {\n    const {\n        id,\n        assembly,\n        xDomain,\n        vcf,\n        vcfIndex,\n        vcf2,\n        vcf2Index,\n        cnv,\n        sv,\n        width,\n        showPutativeDriver,\n        showOverview,\n        xOffset,\n        selectedSvId,\n        drivers,\n        cnFields\n    } = option;\n    return [\n        {\n            linkingId: 'mid-scale',\n            xDomain: xDomain ? { interval: xDomain } : { chromosome: 'chr1' },\n            layout: 'linear',\n            tracks: [\n                {\n                    id: `${id}-mid-ideogram`,\n                    alignment: 'overlay',\n                    data: {\n                        url:\n                            assembly === 'hg38'\n                                ? 'https://raw.githubusercontent.com/sehilyi/gemini-datasets/master/data/UCSC.HG38.Human.CytoBandIdeogram.csv'\n                                : 'https://raw.githubusercontent.com/sehilyi/gemini-datasets/master/data/UCSC.HG19.Human.CytoBandIdeogram.csv',\n                        type: 'csv',\n                        chromosomeField: 'Chromosome',\n                        genomicFields: ['chromStart', 'chromEnd']\n                    },\n                    tracks: [\n                        {\n                            mark: 'rect',\n                            dataTransform: [\n                                {\n                                    type: 'filter',\n                                    field: 'Stain',\n                                    oneOf: ['acen'],\n                                    not: true\n                                }\n                            ]\n                        },\n                        {\n                            mark: 'triangleRight',\n                            dataTransform: [\n                                { type: 'filter', field: 'Stain', oneOf: ['acen'] },\n                                { type: 'filter', field: 'Name', include: 'q' }\n                            ]\n                        },\n                        {\n                            mark: 'triangleLeft',\n                            dataTransform: [\n                                { type: 'filter', field: 'Stain', oneOf: ['acen'] },\n                                { type: 'filter', field: 'Name', include: 'p' }\n                            ]\n                        }\n                    ],\n                    color: {\n                        field: 'Stain',\n                        type: 'nominal',\n                        domain: ['gneg', 'gpos25', 'gpos50', 'gpos75', 'gpos100', 'gvar', 'acen'],\n                        range: ['white', 'lightgray', 'gray', 'gray', 'black', '#7B9CC8', '#DC4542']\n                    },\n                    size: { value: 18 },\n                    x: { field: 'chromStart', type: 'genomic' },\n                    xe: { field: 'chromEnd', type: 'genomic' },\n                    strokeWidth: { value: 0 },\n                    width,\n                    height: 18\n                },\n                tracks.driver(id, driversToTsvUrl(drivers), width, 40, 'mid'),\n                tracks.boundary('driver', 'mid'),\n                {\n                    id: `${id}-mid-gene`,\n                    template: 'gene',\n                    data: {\n                        url:\n                            assembly === 'hg19'\n                                ? // TODO: change to gosling's one\n                                  'https://server.gosling-lang.org/api/v1/tileset_info/?d=gene-annotation-hg19'\n                                : 'https://server.gosling-lang.org/api/v1/tileset_info/?d=gene-annotation',\n                        type: 'beddb',\n                        genomicFields: [\n                            { index: 1, name: 'start' },\n                            { index: 2, name: 'end' }\n                        ],\n                        valueFields: [\n                            { index: 5, name: 'strand', type: 'nominal' },\n                            { index: 3, name: 'name', type: 'nominal' }\n                        ],\n                        exonIntervalFields: [\n                            { index: 12, name: 'start' },\n                            { index: 13, name: 'end' }\n                        ]\n                    },\n                    encoding: {\n                        startPosition: { field: 'start' },\n                        endPosition: { field: 'end' },\n                        strandColor: { field: 'strand', range: ['gray'] },\n                        strandRow: { field: 'strand' },\n                        opacity: { value: 0.4 },\n                        geneHeight: { value: 60 / 3.0 },\n                        geneLabel: { field: 'name' },\n                        geneLabelFontSize: { value: 60 / 3.0 },\n                        geneLabelColor: { field: 'strand', range: ['black'] },\n                        geneLabelStroke: { value: 'white' },\n                        geneLabelStrokeThickness: { value: 4 },\n                        geneLabelOpacity: { value: 1 },\n                        type: { field: 'type' }\n                    },\n                    tooltip: [\n                        { field: 'name', type: 'nominal' },\n                        { field: 'strand', type: 'nominal' }\n                    ],\n                    width,\n                    height: 60\n                },\n                ...(!vcf\n                    ? []\n                    : [tracks.mutation(id, vcf, vcfIndex, width, 60, 'mid'), tracks.boundary('mutation', 'mid')]),\n                ...(!vcf2\n                    ? []\n                    : [tracks.indel(id, vcf2, vcf2Index, width, 40, 'mid'), tracks.boundary('indel', 'mid')]),\n                tracks.cnv(id, cnv, width, 60, 'mid', cnFields),\n                tracks.boundary('cnv', 'mid'),\n                tracks.gain(id, cnv, width, 20, 'mid', cnFields),\n                tracks.boundary('gain', 'mid'),\n                tracks.loh(id, cnv, width, 20, 'mid', cnFields),\n                tracks.boundary('loh', 'mid'),\n                tracks.sv(id, sv, width, 250, 'mid', selectedSvId)\n                // {\n                //     id: `${id}-${'mid'}-sv`,\n                //     data: {\n                //         type: 'json',\n                //         values: [\n                //             { c: 'chr1', p1: 1, p2: 4000000000, v: 250 / 4 },\n                //             { c: 'chr1', p1: 1, p2: 4000000000, v: (250 / 4) * 2 },\n                //             { c: 'chr1', p1: 1, p2: 4000000000, v: (250 / 4) * 3 }\n                //         ],\n                //         chromosomeField: 'c',\n                //         genomicFields: ['p1', 'p2']\n                //     },\n                //     mark: 'rule',\n                //     x: { field: 'p1', type: 'genomic' },\n                //     xe: { field: 'p2', type: 'genomic' },\n                //     y: { field: 'v', type: 'quantitative', domain: [0, 250], axis: 'none' },\n                //     strokeWidth: { value: 0.5 },\n                //     color: { value: '#E3E3E3' },\n                //     width,\n                //     height: 250\n                // },\n            ]\n        }\n    ];\n}\n","import { GoslingSpec } from 'gosling.js';\nimport { SpecOption } from './main-spec';\nimport defaultEncodings from './default-encoding';\nimport { SingleTrack } from 'gosling.js/dist/src/core/gosling.schema';\n\nfunction drawSvReads(option: SpecOption, sv: string): Partial<SingleTrack>[] {\n    const { svReads } = option;\n    return [\n        {\n            dataTransform: [\n                {\n                    type: 'displace',\n                    method: 'pile',\n                    boundingBox: {\n                        startField: 'start',\n                        endField: 'end',\n                        padding: 5,\n                        isPaddingBP: true\n                    },\n                    newField: 'pileup-row',\n                    maxRows: 300\n                },\n                {\n                    type: 'filter',\n                    field: 'name',\n                    oneOf: svReads.filter(d => d.type === sv).map(d => d.name)\n                }\n            ],\n            color: { value: defaultEncodings.color.svclass[sv] },\n            x: { field: 'start', type: 'genomic' },\n            xe: { field: 'end', type: 'genomic' }\n        },\n        {\n            dataTransform: [\n                {\n                    type: 'displace',\n                    method: 'pile',\n                    boundingBox: {\n                        startField: 'start',\n                        endField: 'end',\n                        padding: 5,\n                        isPaddingBP: true\n                    },\n                    newField: 'pileup-row',\n                    maxRows: 300\n                },\n                {\n                    type: 'filter',\n                    field: 'name',\n                    oneOf: svReads.filter(d => d.type === sv).map(d => d.name)\n                },\n                {\n                    type: 'filter',\n                    field: 'strand',\n                    oneOf: ['+']\n                }\n            ],\n            mark: 'triangleRight',\n            color: { value: defaultEncodings.color.svclass[sv] },\n            x: { field: 'end', type: 'genomic' }\n        },\n        {\n            dataTransform: [\n                {\n                    type: 'displace',\n                    method: 'pile',\n                    boundingBox: {\n                        startField: 'start',\n                        endField: 'end',\n                        padding: 5,\n                        isPaddingBP: true\n                    },\n                    newField: 'pileup-row',\n                    maxRows: 300\n                },\n                {\n                    type: 'filter',\n                    field: 'name',\n                    oneOf: svReads.filter(d => d.type === sv).map(d => d.name)\n                },\n                {\n                    type: 'filter',\n                    field: 'strand',\n                    oneOf: ['-']\n                }\n            ],\n            mark: 'triangleLeft',\n            color: { value: defaultEncodings.color.svclass[sv] },\n            x: { field: 'start', type: 'genomic' },\n            style: { align: 'right' }\n        }\n    ];\n}\n\nexport function alignment(option: SpecOption, isLeft: boolean): GoslingSpec {\n    const { id, bam, bai, width, svReads, crossChr, bpIntervals } = option;\n\n    return {\n        id: `${id}-bottom-${isLeft ? 'left' : 'right'}-bam`,\n        alignment: 'overlay',\n        title: 'Alignment',\n        data: { type: 'bam', url: bam, indexUrl: bai, loadMates: false },\n        mark: 'rect',\n        experimental: {\n            mouseEvents: { mouseOver: true, groupMarksByField: 'id' }\n        },\n        tracks: [\n            /**\n             * Regular Reads\n             */\n            {\n                dataTransform: [\n                    {\n                        type: 'displace',\n                        method: 'pile',\n                        boundingBox: {\n                            startField: 'start',\n                            endField: 'end',\n                            padding: 5,\n                            isPaddingBP: true\n                        },\n                        newField: 'pileup-row',\n                        maxRows: 300\n                    }\n                ],\n                color: { value: '#E5E5E5' },\n                x: { field: 'start', type: 'genomic' },\n                xe: { field: 'end', type: 'genomic' }\n            },\n            {\n                dataTransform: [\n                    {\n                        type: 'displace',\n                        method: 'pile',\n                        boundingBox: {\n                            startField: 'start',\n                            endField: 'end',\n                            padding: 5,\n                            isPaddingBP: true\n                        },\n                        newField: 'pileup-row',\n                        maxRows: 300\n                    },\n                    {\n                        type: 'filter',\n                        field: 'strand',\n                        oneOf: ['+']\n                    }\n                ],\n                mark: 'triangleRight',\n                color: { value: '#E5E5E5' },\n                x: { field: 'end', type: 'genomic' }\n            },\n            {\n                dataTransform: [\n                    {\n                        type: 'displace',\n                        method: 'pile',\n                        boundingBox: {\n                            startField: 'start',\n                            endField: 'end',\n                            padding: 5,\n                            isPaddingBP: true\n                        },\n                        newField: 'pileup-row',\n                        maxRows: 300\n                    },\n                    {\n                        type: 'filter',\n                        field: 'strand',\n                        oneOf: ['-']\n                    }\n                ],\n                mark: 'triangleLeft',\n                color: { value: '#E5E5E5' },\n                x: { field: 'start', type: 'genomic' },\n                style: { align: 'right' }\n            },\n            /**\n             * Mutations\n             */\n            {\n                dataTransform: [\n                    {\n                        type: 'displace',\n                        method: 'pile',\n                        boundingBox: {\n                            startField: 'start',\n                            endField: 'end',\n                            padding: 5,\n                            isPaddingBP: true\n                        },\n                        newField: 'pileup-row',\n                        maxRows: 300\n                    },\n                    {\n                        type: 'subjson',\n                        field: 'substitutions',\n                        genomicField: 'pos',\n                        baseGenomicField: 'start',\n                        genomicLengthField: 'length'\n                    },\n                    // { type: 'filter', field: 'type', oneOf: ['sub'] },\n                    { type: 'filter', field: 'type', oneOf: ['A', 'T', 'G', 'C', 'X', 'I', 'D'] }\n                ],\n                x: { field: 'pos_start', type: 'genomic' },\n                xe: { field: 'pos_end', type: 'genomic' },\n                color: {\n                    field: 'variant',\n                    type: 'nominal',\n                    domain: ['A', 'T', 'G', 'C', 'X', 'I', 'D'],\n                    legend: true\n                }\n            },\n            /**\n             * Soft and Hard Clipping Reads\n             */\n            {\n                dataTransform: [\n                    {\n                        type: 'displace',\n                        method: 'pile',\n                        boundingBox: {\n                            startField: 'start',\n                            endField: 'end',\n                            padding: 5,\n                            isPaddingBP: true\n                        },\n                        newField: 'pileup-row',\n                        maxRows: 300\n                    },\n                    {\n                        type: 'subjson',\n                        field: 'substitutions',\n                        genomicField: 'pos',\n                        baseGenomicField: 'start',\n                        genomicLengthField: 'length'\n                    },\n                    { type: 'filter', field: 'type', oneOf: ['S', 'H'] }\n                ],\n                x: { field: 'pos_start', type: 'genomic' },\n                xe: { field: 'pos_end', type: 'genomic' },\n                color: { value: '#414141' },\n                opacity: { value: 1 }\n            },\n            {\n                dataTransform: [\n                    {\n                        type: 'displace',\n                        method: 'pile',\n                        boundingBox: {\n                            startField: 'start',\n                            endField: 'end',\n                            padding: 5,\n                            isPaddingBP: true\n                        },\n                        newField: 'pileup-row',\n                        maxRows: 300\n                    },\n                    {\n                        type: 'subjson',\n                        field: 'substitutions',\n                        genomicField: 'pos',\n                        baseGenomicField: 'start',\n                        genomicLengthField: 'length'\n                    },\n                    { type: 'filter', field: 'type', oneOf: ['S', 'H'] },\n                    {\n                        type: 'filter',\n                        field: 'substitutions',\n                        include: '-',\n                        // !! TODO: not seems to be working oposite way?\n                        not: true\n                    },\n                    {\n                        type: 'filter',\n                        field: 'strand',\n                        oneOf: ['-']\n                    }\n                ],\n                mark: 'triangleLeft',\n                x: { field: 'pos_start', type: 'genomic' },\n                color: { value: '#414141' },\n                opacity: { value: 1 },\n                style: { align: 'right' }\n            },\n            {\n                dataTransform: [\n                    {\n                        type: 'displace',\n                        method: 'pile',\n                        boundingBox: {\n                            startField: 'start',\n                            endField: 'end',\n                            padding: 5,\n                            isPaddingBP: true\n                        },\n                        newField: 'pileup-row',\n                        maxRows: 300\n                    },\n                    {\n                        type: 'subjson',\n                        field: 'substitutions',\n                        genomicField: 'pos',\n                        baseGenomicField: 'start',\n                        genomicLengthField: 'length'\n                    },\n                    { type: 'filter', field: 'type', oneOf: ['S', 'H'] },\n                    {\n                        type: 'filter',\n                        field: 'substitutions',\n                        include: '-',\n                        not: false\n                    },\n                    {\n                        type: 'filter',\n                        field: 'strand',\n                        oneOf: ['+']\n                    }\n                ],\n                mark: 'triangleRight',\n                x: { field: 'pos_end', type: 'genomic' },\n                color: { value: '#414141' },\n                opacity: { value: 1 }\n            },\n            ...drawSvReads(option, 'Translocation'),\n            ...drawSvReads(option, 'Deletion'),\n            ...drawSvReads(option, 'Inversion (TtT)'),\n            ...drawSvReads(option, 'Inversion (HtH)'),\n            ...drawSvReads(option, 'Duplication')\n        ],\n        row: { field: 'pileup-row', type: 'nominal', padding: 0.2 },\n        tooltip: [\n            { field: 'id', type: 'nominal' },\n            { field: 'name', type: 'nominal' },\n            { field: 'start', type: 'genomic' },\n            { field: 'end', type: 'genomic' },\n            { field: 'cigar', type: 'nominal' },\n            { field: 'strand', type: 'nominal' },\n            { field: 'mapq', type: 'quantitative', alt: 'Mapping Quality (MAPQ)' },\n            { field: 'substitutions', type: 'nominal' }\n        ],\n        style: { outlineWidth: 0.5, mouseOver: { stroke: 'black' } },\n        width,\n        height: 500\n    };\n}\n","import { SingleTrack } from 'gosling.js/dist/src/core/gosling.schema';\nexport function verticalGuide(start: number, end: number): Partial<SingleTrack> {\n    return {\n        style: { dashed: [3, 3] },\n        data: {\n            type: 'json',\n            values: [\n                {\n                    chr: 'chr1',\n                    p: start\n                },\n                {\n                    chr: 'chr1',\n                    p: end\n                }\n            ],\n            chromosomeField: 'chr',\n            genomicFields: ['p']\n        },\n        mark: 'rule',\n        x: { field: 'p', type: 'genomic' },\n        color: { value: 'black' },\n        strokeWidth: { value: 1 },\n        overlayOnPreviousTrack: true\n    } as Partial<SingleTrack>;\n}\n","import { GoslingSpec } from 'gosling.js';\nimport { Assembly, MultipleViews, SingleTrack, SingleView, View } from 'gosling.js/dist/src/core/gosling.schema';\nimport getMidView from './mid-spec';\nimport { alignment } from './alignment';\nimport { verticalGuide } from './vertical-guide';\nimport tracks from './track';\nimport { SampleType } from './data/samples';\nimport { driversToTsvUrl } from './utils';\n\nexport interface SpecOption extends SampleType {\n    showOverview: boolean;\n    showPutativeDriver: boolean;\n    xDomain?: [number, number];\n    xOffset: number;\n    width: number;\n    drivers: { [k: string]: string | number }[] | string;\n    selectedSvId: string;\n    breakpoints: [number, number, number, number];\n    svReads: { name: string; type: string }[];\n    crossChr: boolean;\n    bpIntervals: [number, number, number, number] | undefined;\n}\n\nfunction generateSpec(opt: SpecOption): GoslingSpec {\n    const { assembly, id, bam, bai, width, selectedSvId, breakpoints, bpIntervals } = opt;\n\n    const topViewWidth = Math.min(width, 600);\n    const midViewWidth = width;\n    const bottomViewGap = 19;\n    const bottomViewWidth = width / 2.0 - bottomViewGap / 2.0;\n    const topViewXOffset = (width - topViewWidth) / 2.0;\n    // console.log(getOverviewSpec({\n    //     ...option,\n    //     width: topViewWidth,\n    //     xOffset: topViewXOffset\n    // }));\n    return {\n        layout: 'linear',\n        arrangement: 'vertical',\n        centerRadius: 0.5,\n        assembly,\n        spacing: 40,\n        style: {\n            outlineWidth: 1,\n            outline: 'lightgray',\n            enableSmoothPath: false\n        },\n        views: [\n            {\n                arrangement: 'vertical',\n                views: [\n                    ...getOverviewSpec({\n                        ...opt,\n                        width: topViewWidth,\n                        xOffset: topViewXOffset\n                    }),\n                    ...getMidView({\n                        ...opt,\n                        width: midViewWidth\n                    })\n                ]\n            },\n            ...(selectedSvId === ''\n                ? []\n                : ([\n                      {\n                          arrangement: 'horizontal',\n                          spacing: bottomViewGap,\n                          views: [\n                              {\n                                  static: false,\n                                  zoomLimits: [50, 1000],\n                                  layout: 'linear',\n                                  centerRadius: 0.05,\n                                  xDomain: { interval: [breakpoints[0], breakpoints[1]] },\n                                  spacing: 0.01,\n                                  linkingId: 'detail-scale-1',\n                                  tracks: [\n                                      ...(opt.bam && opt.bai\n                                          ? [\n                                                {\n                                                    ...tracks.coverage({ ...opt, width: bottomViewWidth }, true)\n                                                },\n                                                ...(bpIntervals ? [verticalGuide(bpIntervals[0], bpIntervals[1])] : [])\n                                            ]\n                                          : []),\n                                      {\n                                          id: `${id}-bottom-left-sequence`,\n                                          title: 'Sequence',\n                                          alignment: 'overlay',\n                                          data: {\n                                              url: 'https://server.gosling-lang.org/api/v1/tileset_info/?d=sequence-multivec',\n                                              type: 'multivec',\n                                              row: 'base',\n                                              column: 'position',\n                                              value: 'count',\n                                              categories: ['A', 'T', 'G', 'C'],\n                                              start: 'start',\n                                              end: 'end'\n                                          },\n                                          tracks: [\n                                              {\n                                                  mark: 'bar',\n                                                  y: {\n                                                      field: 'count',\n                                                      type: 'quantitative',\n                                                      axis: 'none'\n                                                  }\n                                              },\n                                              {\n                                                  dataTransform: [\n                                                      {\n                                                          type: 'filter',\n                                                          field: 'count',\n                                                          oneOf: [0],\n                                                          not: true\n                                                      }\n                                                  ],\n                                                  mark: 'text',\n                                                  x: { field: 'start', type: 'genomic' },\n                                                  xe: { field: 'end', type: 'genomic' },\n                                                  size: { value: 24 },\n                                                  color: { value: 'white' },\n                                                  visibility: [\n                                                      {\n                                                          operation: 'less-than',\n                                                          measure: 'width',\n                                                          threshold: '|xe-x|',\n                                                          transitionPadding: 30,\n                                                          target: 'mark'\n                                                      },\n                                                      {\n                                                          operation: 'LT',\n                                                          measure: 'zoomLevel',\n                                                          threshold: 10,\n                                                          target: 'track'\n                                                      }\n                                                  ]\n                                              }\n                                          ],\n                                          x: { field: 'position', type: 'genomic' },\n                                          color: {\n                                              field: 'base',\n                                              type: 'nominal',\n                                              domain: ['A', 'T', 'G', 'C'],\n                                              legend: true\n                                          },\n                                          text: { field: 'base', type: 'nominal' },\n                                          style: { inlineLegend: true },\n                                          width: bottomViewWidth,\n                                          height: 40\n                                      },\n                                      ...(opt.bam && opt.bai\n                                          ? [\n                                                {\n                                                    ...alignment({ ...opt, width: bottomViewWidth }, true)\n                                                }\n                                            ]\n                                          : []),\n                                      ...(bpIntervals ? [verticalGuide(bpIntervals[0], bpIntervals[1])] : [])\n                                  ]\n                              },\n                              {\n                                  static: false,\n                                  zoomLimits: [50, 1000],\n                                  layout: 'linear',\n                                  centerRadius: 0.05,\n                                  xDomain: { interval: [breakpoints[2], breakpoints[3]] },\n                                  spacing: 0.01,\n                                  linkingId: 'detail-scale-2',\n                                  tracks: [\n                                      ...(opt.bam && opt.bai\n                                          ? [\n                                                {\n                                                    ...tracks.coverage({ ...opt, width: bottomViewWidth }, false)\n                                                },\n                                                ...(bpIntervals ? [verticalGuide(bpIntervals[2], bpIntervals[3])] : [])\n                                            ]\n                                          : []),\n                                      {\n                                          id: `${id}-bottom-right-sequence`,\n                                          title: 'Sequence',\n                                          alignment: 'overlay',\n                                          data: {\n                                              url: 'https://server.gosling-lang.org/api/v1/tileset_info/?d=sequence-multivec',\n                                              type: 'multivec',\n                                              row: 'base',\n                                              column: 'position',\n                                              value: 'count',\n                                              categories: ['A', 'T', 'G', 'C'],\n                                              start: 'start',\n                                              end: 'end'\n                                          },\n                                          tracks: [\n                                              {\n                                                  mark: 'bar',\n                                                  y: {\n                                                      field: 'count',\n                                                      type: 'quantitative',\n                                                      axis: 'none'\n                                                  }\n                                              },\n                                              {\n                                                  dataTransform: [\n                                                      {\n                                                          type: 'filter',\n                                                          field: 'count',\n                                                          oneOf: [0],\n                                                          not: true\n                                                      }\n                                                  ],\n                                                  mark: 'text',\n                                                  x: { field: 'start', type: 'genomic' },\n                                                  xe: { field: 'end', type: 'genomic' },\n                                                  size: { value: 24 },\n                                                  color: { value: 'white' },\n                                                  visibility: [\n                                                      {\n                                                          operation: 'less-than',\n                                                          measure: 'width',\n                                                          threshold: '|xe-x|',\n                                                          transitionPadding: 30,\n                                                          target: 'mark'\n                                                      },\n                                                      {\n                                                          operation: 'LT',\n                                                          measure: 'zoomLevel',\n                                                          threshold: 10,\n                                                          target: 'track'\n                                                      }\n                                                  ]\n                                              }\n                                          ],\n                                          x: { field: 'position', type: 'genomic' },\n                                          color: {\n                                              field: 'base',\n                                              type: 'nominal',\n                                              domain: ['A', 'T', 'G', 'C'],\n                                              legend: true\n                                          },\n                                          text: { field: 'base', type: 'nominal' },\n                                          style: { inlineLegend: true },\n                                          width: bottomViewWidth,\n                                          height: 40\n                                      },\n                                      ...(opt.bam && opt.bai\n                                          ? [\n                                                {\n                                                    ...alignment({ ...opt, width: bottomViewWidth }, false)\n                                                }\n                                            ]\n                                          : []),\n                                      ...(bpIntervals ? [verticalGuide(bpIntervals[2], bpIntervals[3])] : [])\n                                  ]\n                              }\n                          ]\n                      }\n                  ] as (SingleView | MultipleViews)[]))\n        ]\n    };\n}\n\nfunction getOverviewSpec(option: SpecOption): View[] {\n    const { assembly, id, cnv, sv, width, showPutativeDriver, showOverview, selectedSvId, xOffset, drivers, cnFields } =\n        option;\n\n    if (!showOverview) return [];\n\n    return [\n        {\n            xOffset,\n            static: true,\n            layout: 'circular',\n            spacing: 1,\n            style: {\n                outlineWidth: 1,\n                outline: 'lightgray'\n            },\n            tracks: [\n                {\n                    id: `${id}-top-ideogram`,\n                    alignment: 'overlay',\n                    data: {\n                        url:\n                            assembly === 'hg38'\n                                ? 'https://raw.githubusercontent.com/sehilyi/gemini-datasets/master/data/UCSC.HG38.Human.CytoBandIdeogram.csv'\n                                : 'https://raw.githubusercontent.com/sehilyi/gemini-datasets/master/data/UCSC.HG19.Human.CytoBandIdeogram.csv',\n                        type: 'csv',\n                        chromosomeField: 'Chromosome',\n                        genomicFields: ['chromStart', 'chromEnd']\n                    },\n                    tracks: [\n                        { mark: 'rect' },\n                        {\n                            mark: 'brush',\n                            x: { linkingId: 'mid-scale' },\n                            strokeWidth: { value: 1 },\n                            stroke: { value: '#0070DC' },\n                            color: { value: '#AFD8FF' },\n                            opacity: { value: 0.5 }\n                        }\n                    ],\n                    color: {\n                        field: 'Stain',\n                        type: 'nominal',\n                        domain: ['gneg', 'gpos25', 'gpos50', 'gpos75', 'gpos100', 'gvar', 'acen'],\n                        range: ['white', 'lightgray', 'gray', 'gray', 'black', '#7B9CC8', '#DC4542']\n                    },\n                    size: { value: 18 },\n                    x: { field: 'chromStart', type: 'genomic' },\n                    xe: { field: 'chromEnd', type: 'genomic' },\n                    strokeWidth: { value: 0 },\n                    width,\n                    height: 100\n                },\n                tracks.driver(id, driversToTsvUrl(drivers), width, 40, 'top'),\n                tracks.boundary('driver', 'top'),\n                tracks.gain(id, cnv, width, 40, 'top', cnFields),\n                tracks.boundary('gain', 'top'),\n                tracks.loh(id, cnv, width, 40, 'top', cnFields),\n                tracks.boundary('loh', 'top'),\n                tracks.sv(id, sv, width, 80, 'top', selectedSvId)\n            ]\n        }\n    ];\n}\n\nexport default generateSpec;\n"],"names":["defaults"],"mappings":"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"}